worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}


http {
  include           /etc/nginx/mime.types;
  charset           utf-8;

  # Need for redirection
  upstream api {
    server backend:9000;
  }

  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

  access_log      /var/log/nginx/access.log  main;

  sendfile        off;
  tcp_nopush      off;
  tcp_nodelay     on;

  keepalive_timeout  65;

  # GZIP configuration
  gzip            on;
  gzip_vary       on;
  gzip_static     on;
  gzip_proxied    expired no-cache no-store private auth;
  gzip_types      text/plain text/css text/xml text/javascript application/x-javascript application/xml;
  gzip_disable    "MSIE [1-6]\.";

  # Redirect
  server {
    server_name www.loveit.tips;
    return 301 https://loveit.tips$request_uri;
  }

  server {
    server_name   www.loveit.tips clemble.com www.clemble.com;

    location / {
      rewrite ^(.*) https://loveit.tips$1 permanent;
    }
  }

  server {
    listen              443 ssl http2;
    server_name         loveit.tips;

    ssl                 on;
    ssl_certificate     /var/ssl/loveit.chained.crt;
    ssl_certificate_key /var/ssl/loveit.key;

    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    ssl_session_cache   shared:SSL:5m;
    ssl_session_timeout 1h;

    add_header   X-Xss-Protection "1; mode=block" always;
    add_header   X-Content-Type-Options "nosniff" always;
    add_header   Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://google-analytics.com https://www.google-analytics.com https://cdn.jsdelivr.net https://ajax.cloudflare.com https://cdn.ravenjs.com; img-src 'self' https://www.google-analytics.com https://stats.g.doubleclick.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net; font-src 'self' 'unsafe-inline' https://themes.googleusercontent.com https://cdn.jsdelivr.net; object-src 'none'";
    add_header   Strict-Transport-Security "max-age=15768000" always;

    root          /usr/share/nginx/html;
    index         index.html index.htm;

    location / {
      expires       max;
      add_header   X-Frame-Options "DENY";

      if (!-e $request_filename) {
        rewrite ^(.*)$ /index.html break;
      }
    }

    root   /path/to/your/root;
    index  index.html;

    location / {
      try_files $uri @prerender;
    }

    location @prerender {
      proxy_set_header X-Prerender-Token cn6SyvDn0WtCzMuMom1G;

      set $prerender 0;
      if ($http_user_agent ~* "baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator") {
        set $prerender 1;
      }
      if ($args ~ "_escaped_fragment_") {
        set $prerender 1;
      }
      if ($http_user_agent ~ "Prerender") {
        set $prerender 0;
      }
      if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
        set $prerender 0;
      }

      #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
      resolver 8.8.8.8;

      if ($prerender = 1) {

        #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
        set $prerender "service.prerender.io";
        rewrite .* /$scheme://$host$request_uri? break;
          proxy_pass http://$prerender;
      }
      if ($prerender = 0) {
        rewrite .* /index.html break;
      }
    }

    location /integration {
      root            /usr/share/nginx/html;
      index           index.html index.htm;
      expires 12h;

      if (!-e $request_filename) {
        rewrite ^(.*)$ /integration/index.html break;
      }
    }

    location ~ index\.html {
      root            /usr/share/nginx/html;

      sendfile        on;
      tcp_nopush      on;
      tcp_nodelay     on;

      add_header   'Cache-Control' 'no-cache, must-revalidate, proxy-revalidate, max-age=300';
      expires 5m;
    }


    location /api/ {
      proxy_http_version 1.1;  #this is essential for chunked responses to work

      add_header   X-Frame-Options "DENY";

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_pass http://api;
    }
  }
}